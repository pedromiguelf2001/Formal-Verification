Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    EQ
    GEQ
    GT
    LEQ
    LT
    NEQ
    NOT
    OR

Grammar

Rule 0     S' -> ExpressionInit
Rule 1     ExpressionInit -> Atribs
Rule 2     Atribs -> Atrib ;
Rule 3     Atribs -> Atribs Atrib ;
Rule 4     Atrib -> ID ATRIB Expre
Rule 5     Expre -> Expre SUM Expre
Rule 6     Expre -> Expre SUB Expre
Rule 7     Expre -> Expre MULT Expre
Rule 8     Expre -> Expre DIV Expre
Rule 9     Expre -> Expre MOD Expre
Rule 10    Expre -> LParen Expre RParen
Rule 11    Expre -> ID
Rule 12    Expre -> NUM

Terminals, with rules where they appear

;                    : 2 3
AND                  : 
ATRIB                : 4
DIV                  : 8
EQ                   : 
GEQ                  : 
GT                   : 
ID                   : 4 11
LEQ                  : 
LParen               : 10
LT                   : 
MOD                  : 9
MULT                 : 7
NEQ                  : 
NOT                  : 
NUM                  : 12
OR                   : 
RParen               : 10
SUB                  : 6
SUM                  : 5
error                : 

Nonterminals, with rules where they appear

Atrib                : 2 3
Atribs               : 1 3
Expre                : 4 5 5 6 6 7 7 8 8 9 9 10
ExpressionInit       : 0

Parsing method: LALR

state 0

    (0) S' -> . ExpressionInit
    (1) ExpressionInit -> . Atribs
    (2) Atribs -> . Atrib ;
    (3) Atribs -> . Atribs Atrib ;
    (4) Atrib -> . ID ATRIB Expre

    ID              shift and go to state 4

    ExpressionInit                 shift and go to state 1
    Atribs                         shift and go to state 2
    Atrib                          shift and go to state 3

state 1

    (0) S' -> ExpressionInit .



state 2

    (1) ExpressionInit -> Atribs .
    (3) Atribs -> Atribs . Atrib ;
    (4) Atrib -> . ID ATRIB Expre

    $end            reduce using rule 1 (ExpressionInit -> Atribs .)
    ID              shift and go to state 4

    Atrib                          shift and go to state 5

state 3

    (2) Atribs -> Atrib . ;

    ;               shift and go to state 6


state 4

    (4) Atrib -> ID . ATRIB Expre

    ATRIB           shift and go to state 7


state 5

    (3) Atribs -> Atribs Atrib . ;

    ;               shift and go to state 8


state 6

    (2) Atribs -> Atrib ; .

    ID              reduce using rule 2 (Atribs -> Atrib ; .)
    $end            reduce using rule 2 (Atribs -> Atrib ; .)


state 7

    (4) Atrib -> ID ATRIB . Expre
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 10

state 8

    (3) Atribs -> Atribs Atrib ; .

    ID              reduce using rule 3 (Atribs -> Atribs Atrib ; .)
    $end            reduce using rule 3 (Atribs -> Atribs Atrib ; .)


state 9

    (11) Expre -> ID .

    SUM             reduce using rule 11 (Expre -> ID .)
    SUB             reduce using rule 11 (Expre -> ID .)
    MULT            reduce using rule 11 (Expre -> ID .)
    DIV             reduce using rule 11 (Expre -> ID .)
    MOD             reduce using rule 11 (Expre -> ID .)
    ;               reduce using rule 11 (Expre -> ID .)
    RParen          reduce using rule 11 (Expre -> ID .)


state 10

    (4) Atrib -> ID ATRIB Expre .
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    ;               reduce using rule 4 (Atrib -> ID ATRIB Expre .)
    SUM             shift and go to state 13
    SUB             shift and go to state 14
    MULT            shift and go to state 15
    DIV             shift and go to state 16
    MOD             shift and go to state 17


state 11

    (10) Expre -> LParen . Expre RParen
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 18

state 12

    (12) Expre -> NUM .

    SUM             reduce using rule 12 (Expre -> NUM .)
    SUB             reduce using rule 12 (Expre -> NUM .)
    MULT            reduce using rule 12 (Expre -> NUM .)
    DIV             reduce using rule 12 (Expre -> NUM .)
    MOD             reduce using rule 12 (Expre -> NUM .)
    ;               reduce using rule 12 (Expre -> NUM .)
    RParen          reduce using rule 12 (Expre -> NUM .)


state 13

    (5) Expre -> Expre SUM . Expre
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 19

state 14

    (6) Expre -> Expre SUB . Expre
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 20

state 15

    (7) Expre -> Expre MULT . Expre
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 21

state 16

    (8) Expre -> Expre DIV . Expre
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 22

state 17

    (9) Expre -> Expre MOD . Expre
    (5) Expre -> . Expre SUM Expre
    (6) Expre -> . Expre SUB Expre
    (7) Expre -> . Expre MULT Expre
    (8) Expre -> . Expre DIV Expre
    (9) Expre -> . Expre MOD Expre
    (10) Expre -> . LParen Expre RParen
    (11) Expre -> . ID
    (12) Expre -> . NUM

    LParen          shift and go to state 11
    ID              shift and go to state 9
    NUM             shift and go to state 12

    Expre                          shift and go to state 23

state 18

    (10) Expre -> LParen Expre . RParen
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    RParen          shift and go to state 24
    SUM             shift and go to state 13
    SUB             shift and go to state 14
    MULT            shift and go to state 15
    DIV             shift and go to state 16
    MOD             shift and go to state 17


state 19

    (5) Expre -> Expre SUM Expre .
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    SUM             reduce using rule 5 (Expre -> Expre SUM Expre .)
    SUB             reduce using rule 5 (Expre -> Expre SUM Expre .)
    ;               reduce using rule 5 (Expre -> Expre SUM Expre .)
    RParen          reduce using rule 5 (Expre -> Expre SUM Expre .)
    MULT            shift and go to state 15
    DIV             shift and go to state 16
    MOD             shift and go to state 17

  ! MULT            [ reduce using rule 5 (Expre -> Expre SUM Expre .) ]
  ! DIV             [ reduce using rule 5 (Expre -> Expre SUM Expre .) ]
  ! MOD             [ reduce using rule 5 (Expre -> Expre SUM Expre .) ]
  ! SUM             [ shift and go to state 13 ]
  ! SUB             [ shift and go to state 14 ]


state 20

    (6) Expre -> Expre SUB Expre .
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    SUM             reduce using rule 6 (Expre -> Expre SUB Expre .)
    SUB             reduce using rule 6 (Expre -> Expre SUB Expre .)
    ;               reduce using rule 6 (Expre -> Expre SUB Expre .)
    RParen          reduce using rule 6 (Expre -> Expre SUB Expre .)
    MULT            shift and go to state 15
    DIV             shift and go to state 16
    MOD             shift and go to state 17

  ! MULT            [ reduce using rule 6 (Expre -> Expre SUB Expre .) ]
  ! DIV             [ reduce using rule 6 (Expre -> Expre SUB Expre .) ]
  ! MOD             [ reduce using rule 6 (Expre -> Expre SUB Expre .) ]
  ! SUM             [ shift and go to state 13 ]
  ! SUB             [ shift and go to state 14 ]


state 21

    (7) Expre -> Expre MULT Expre .
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    SUM             reduce using rule 7 (Expre -> Expre MULT Expre .)
    SUB             reduce using rule 7 (Expre -> Expre MULT Expre .)
    MULT            reduce using rule 7 (Expre -> Expre MULT Expre .)
    DIV             reduce using rule 7 (Expre -> Expre MULT Expre .)
    MOD             reduce using rule 7 (Expre -> Expre MULT Expre .)
    ;               reduce using rule 7 (Expre -> Expre MULT Expre .)
    RParen          reduce using rule 7 (Expre -> Expre MULT Expre .)

  ! SUM             [ shift and go to state 13 ]
  ! SUB             [ shift and go to state 14 ]
  ! MULT            [ shift and go to state 15 ]
  ! DIV             [ shift and go to state 16 ]
  ! MOD             [ shift and go to state 17 ]


state 22

    (8) Expre -> Expre DIV Expre .
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    SUM             reduce using rule 8 (Expre -> Expre DIV Expre .)
    SUB             reduce using rule 8 (Expre -> Expre DIV Expre .)
    MULT            reduce using rule 8 (Expre -> Expre DIV Expre .)
    DIV             reduce using rule 8 (Expre -> Expre DIV Expre .)
    MOD             reduce using rule 8 (Expre -> Expre DIV Expre .)
    ;               reduce using rule 8 (Expre -> Expre DIV Expre .)
    RParen          reduce using rule 8 (Expre -> Expre DIV Expre .)

  ! SUM             [ shift and go to state 13 ]
  ! SUB             [ shift and go to state 14 ]
  ! MULT            [ shift and go to state 15 ]
  ! DIV             [ shift and go to state 16 ]
  ! MOD             [ shift and go to state 17 ]


state 23

    (9) Expre -> Expre MOD Expre .
    (5) Expre -> Expre . SUM Expre
    (6) Expre -> Expre . SUB Expre
    (7) Expre -> Expre . MULT Expre
    (8) Expre -> Expre . DIV Expre
    (9) Expre -> Expre . MOD Expre

    SUM             reduce using rule 9 (Expre -> Expre MOD Expre .)
    SUB             reduce using rule 9 (Expre -> Expre MOD Expre .)
    MULT            reduce using rule 9 (Expre -> Expre MOD Expre .)
    DIV             reduce using rule 9 (Expre -> Expre MOD Expre .)
    MOD             reduce using rule 9 (Expre -> Expre MOD Expre .)
    ;               reduce using rule 9 (Expre -> Expre MOD Expre .)
    RParen          reduce using rule 9 (Expre -> Expre MOD Expre .)

  ! SUM             [ shift and go to state 13 ]
  ! SUB             [ shift and go to state 14 ]
  ! MULT            [ shift and go to state 15 ]
  ! DIV             [ shift and go to state 16 ]
  ! MOD             [ shift and go to state 17 ]


state 24

    (10) Expre -> LParen Expre RParen .

    SUM             reduce using rule 10 (Expre -> LParen Expre RParen .)
    SUB             reduce using rule 10 (Expre -> LParen Expre RParen .)
    MULT            reduce using rule 10 (Expre -> LParen Expre RParen .)
    DIV             reduce using rule 10 (Expre -> LParen Expre RParen .)
    MOD             reduce using rule 10 (Expre -> LParen Expre RParen .)
    ;               reduce using rule 10 (Expre -> LParen Expre RParen .)
    RParen          reduce using rule 10 (Expre -> LParen Expre RParen .)

